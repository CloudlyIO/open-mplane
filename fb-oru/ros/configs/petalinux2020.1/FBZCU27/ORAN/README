#########################################################
# 1.  BSP generation steps   							#
# 	1.a Create and Configure a project					#
#	1.b Configuring BSP		        					#
#	1.c Project Build		        					#
#	1.d Packageing a BSP			    				#
# 2. Software Images					    			#
#########################################################

1. BSP generation steps
================================================================================
This section explain about BSP generation steps.

	1.a Creation and configuration of project

		$ petalinux-create -t project --template zynqMP --force -n <name of project>
		$ petalinux-config --get-hw-description=<path to xsa directory> --silentconfig

	1.b Configuring BSP

		$ cat >> project-spec/meta-user/conf/user-rootfsconfig << EOF
CONFIG_peekpoke
CONFIG_gpio-demo
CONFIG_rfdc
CONFIG_rfdc-read-write
CONFIG_rfdc-selftest
CONFIG_sdfec
EOF
		$ petalinux-config -c rootfs
            Select following packages and save it 
                rfdc
				rfdc-read-write
				rfdc-selftest
				sdfec
        $ petalinux-config
            Enter zcu111-reva for MACHINE_NAME option  ( ZCU111 DTG board parameter)

	1.c. Project Build

		$ petalinux-build
		$ mkdir -p pre-built/linux/images
		$ cp <project root>/images/linux/* <project root>/pre-built/linux/images/
        $ rm -rf images

	1.d. Packageing a BSP
		Package the BSP with files generated with following command
		$  petalinux-package --bsp -p <plnx-proj-root> --hwsource <hw-project-root> --output <name of the BSP>

        NOTE: --hwsource is optional and can be removed

2. Software Images
================================================================================
You can run the following command to rebuild the software images:
 * zynqmp_fsbl.elf
 * image.ub
 * Image
 * u-boot.elf
 * system.dtb
 * pmufw.elf
 * bl31.elf

   $ petalinux-build

You can also rebuild some of the images alone as follows:
 * zynqmp_fsbl.elf
   $ petalinux-build -c bootloader

 * u-boot.elf
   $ petalinux-build -c u-boot

 * system.dtb
   $ petalinux-build -c device-tree

 * kernel only:
   $ petalinux-build -c kernel

For more info regarding how to build images run "petalinux-build --help" command

You can generate BOOT.BIN file with "petalinux-package --boot" command:
 $ petalinux-package --boot --fpga pre-built/linux/images/system.bit \
   --fsbl pre-built/linux/images/zynqmp_fsbl.elf \
   --u-boot pre-built/linux/images/u-boot.elf	\
   --pmufw prebuilt/linux/images/pmufw.elf	\
   --atf pre-built/linux/images/bl31.elf
