<?xml version="1.0"?>
<!DOCTYPE TestInterface SYSTEM "../../../shared/dtd/Tif.dtd">
<TestInterface version="1.0">
 	<Board name="common">
		<Device name="Dpd" path="/dpd" comment="DPD control">
		
		
			<Function name="checkApi" comment="Check that application API version matches DPD version"></Function>
			<Function name="debugStatus" comment="Show the DPD debug status registers"></Function>
			
			<Function name="portOpen">
				<Args>
					<Data type="ENUM(CMD:REPLY:EVENT:LOG:MATLAB:TEXT)">type</Data>
					<Data type="INT">port</Data>
				</Args>
			</Function>
			<Function name="portClose">
				<Args>
					<Data type="ENUM(CMD:REPLY:EVENT:LOG:MATLAB:TEXT)">type</Data>
					<Data type="INT">port</Data>
				</Args>
			</Function>
			<Function name="portShow"></Function>
			
			<Function name="logOpen">
				<Args>
					<Data type="ENUM(CMD:REPLY:EVENT:LOG:MATLAB:TEXT)">type</Data>
				</Args>
			</Function>
			<Function name="logClose">
				<Args>
					<Data type="ENUM(CMD:REPLY:EVENT:LOG:MATLAB:TEXT)">type</Data>
				</Args>
			</Function>
			<Function name="logShow"></Function>
		
			<!-- Autogen start -->
			<Function name="apiVersion" comment="get the current api version">
			</Function>
			<Function name="set" comment="set the state variables">
				<Args>
					<Data type="ENUM(NACK:ACK)" optional="1" comment="every reply message has an ACK or NACK response">response</Data>
					<Data type="INT" optional="1" comment="Command and reply are associated by the same monotonically increasing message id">msgId</Data>
					<Data type="INT" optional="1" comment="current DPD (software) version number">version</Data>
					<Data type="FLOAT" optional="1" comment="current DPD (FPGA) version number">fpgaVersion</Data>
					<Data type="INT" optional="1" comment="current build number">build</Data>
					<Data type="INT" optional="1" comment="the number of decimal places used for floating point output (e.g. to MatLab channel)">precision</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable output to the trace channel">trace</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable verbose output to the trace channel">verbose</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable ooutput to the MatLab channel">matlab</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable output to the console">console</Data>
					<Data type="INT" optional="1" comment="time in minutes since the DPD process started (readonly)">uptime</Data>
					<Data type="INT" optional="1" comment="time in milliseconds (16-bits, unsigned) (readonly)">t</Data>
					<Data type="INT" optional="1" comment="defines the interval in ms that the DL signals are monitored (nominally 100ms)">dt</Data>
					<Data type="INT" optional="1" comment="the Tx path (where multiple Tx paths are supported)">tx</Data>
					<Data type="INT" optional="1" comment="the number of terms used in the DPD filter (min=1, max=8)">Q</Data>
					<Data type="INT" optional="1" comment="the number of bins used for DPD iterations (nominal=14, max=32)">B</Data>
					<Data type="INT" optional="1" comment="the number of capture data sets to aggregate for each DPD iteration (nominal=3)">N</Data>
					<Data type="FLOAT" optional="1" comment="the gain to use when updating the DPD filter with a newly calculated set of coefficients (nominal=0.25)">G</Data>
					<Data type="FLOAT" optional="1" comment="the gain to use when updating the QMC filter with a newly calculated set of coefficients (nominal=0.25)">Gqmc</Data>
					<Data type="FLOAT" optional="1" comment="the gain to use when updating the SRX attenuator (nominal=0.1)">Gagc</Data>
					<Data type="INT" optional="1" comment="specifies the memory-delay in 245.76MHz samples for the data path to each of the DPD filter's terms (specified as a 32-bit word in hexadecimal with MSB corresponding to primary term or Q=1 nominal=0x01234567)">taps</Data>
					<Data type="INT" optional="1" comment="specifies the memory-delay in 245.76MHz samples for the magnitude path to each of the DPD filter's terms (specified as a 32-bit word in hexadecimal with MSB corresponding to primary term or Q=1 nominal=0x01234567)">mags</Data>
					<Data type="FLOAT" optional="1" comment="fast time-constant filter coefficient for DL monitoring (nominal=0.05)">C1</Data>
					<Data type="FLOAT" optional="1" comment="slow time-constant filter coefficient for DL monitoring (nominal=0.005)">C2</Data>
					<Data type="INT" optional="1" comment="hard clip magnitude threshold (range=[0-32767] nominal=28210)">clip</Data>
					<Data type="INT" optional="1" comment="minimum number of samples for a bin (B) to be considered valid in a DPD iteration">occupancy</Data>
					<Data type="FLOAT" optional="1" comment="the expected PAPR (in dB) of the DL signal at the input of the DPD filter (depends on the configuration of any preceeding CFR, nominal=7.2)">XcfrRef</Data>
					<Data type="INT" optional="1" comment="the expected RMS magnitude of the DL signal at the input to the DPD filter (range=[0..32767] nominal=6925, -13.5dBfs)">XrmsRef</Data>
					<Data type="INT" optional="1" comment="this specifies a minimum DL signal magnitude,  below which the DPD filter characteristic will be extrapolated rather than use noisy data (range=[0..32767] nominal=2190, -23.5dBfs)">XminRef</Data>
					<Data type="INT" optional="1" comment="this specifies the expected, or target, RMS magnitude for the observation receiver (SRx) path (range=[0..32767] nominal=6925, -13.5dBfs). An event is generated with the measured error relative to this level and the SRx RF attenuator is adjusted (if supported) in order to correct it after each DPD iteration">YrmsRef</Data>
					<Data type="FLOAT" optional="1" comment="the current observation receiver (SRx) RF attenuator setting in dB">srxAtten</Data>
					<Data type="FLOAT" optional="1" comment="the maximum gain error allowed between forward path and observation receiver (SRx) in dB (default=6.0)">srxLimit</Data>
					<Data type="FLOAT" optional="1" comment="the measured error (dB) of the forward path gain relative to XrmsRef and YrmsRef [event only]">fwdGerr</Data>
					<Data type="FLOAT" optional="1" comment="the measured error (dB) of the reverse path gain relative to XrmsRef and YrmsRef [event only]">revGerr</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="allows the observation receiver (SRx) AGC to be enabled/disabled">srxAgc</Data>
					<Data type="ENUM(IDLE:WAITMODEL:RESET:WAITBB:TA:CONVERGE:TRACK:NONE)" optional="1" comment="indicates the current state of the DPD control state machine">state</Data>
					<Data type="INT" optional="1" comment="the number of successful DPD iterations since it was last started [event only]">success</Data>
					<Data type="INT" optional="1" comment="the number of consecutive failures of DPD iterations [event only]">fail</Data>
					<Data type="ENUM(OK:UNKNOWN:TIMEALIGNMENT:LOWBB:MUXFAIL:DCUFAIL:LOWSRX:HIGHSRX:YERROR:ZERROR:DIMENSIONING:SOLVER:LUTS:NORMALISATION:RANGE:COVERAGE:UPDATESTRATEGY:EFFICIENCY:EXPANSION:INSANE:SPURIOUS:INHIBIT)" optional="1" comment="specific error relating to the DPD control process or the DPD algorithm itself [event only]">err</Data>
					<Data type="FLOAT" optional="1" comment="the efficiency metric for the current iteration (dB) [event only]">eff</Data>
					<Data type="FLOAT" optional="1" comment="the threshold against which eff is compared (nominal=-10) Iterations with eff>Elim will be discarded and cause the INSANE error code to be generated. Elim must be set to 0 or less. Setting Elim=0 disables this test">Elim</Data>
					<Data type="FLOAT" optional="1" comment="the expansion metric (DPD filter gain at DL peak magnitude) (dB) [event only]">Gexp</Data>
					<Data type="FLOAT" optional="1" comment="the threshold against which Gexp is compared (nominal=3.0) Iterations with Gexp>Glim will be discarded and cause the EXPANSION error code to be generated. This should limit the maximum gain expansion that the DPD filter can provide, protecting the PA from being overdriven and potentially damaged. Setting Glim=0 disables this test.">Glim</Data>
					<Data type="FLOAT" optional="1" comment="the EVM of the calculated coefficients compared with the current, in-use, coefficients (dB) [event only]">evm</Data>
					<Data type="INT" optional="1" comment="indicates whether the TA process has detected correct time-alignment between the Z and Y capture data (event only)">lock</Data>
					<Data type="FLOAT" optional="1" comment="current time-alignment adjustment (skew between Z and Y signals)">Tabs</Data>
					<Data type="FLOAT" optional="1" comment="measured time-alignment error (event only)">Tdelta</Data>
					<Data type="FLOAT" optional="1" comment="modifier for the time-alignment error limits, set to above 1.0 to widen the limits, below 1.0 to narrow the limits. This affects the TA acquisition (default=1.0) and it may be necessary to increase the limits for reliable acquisition with proportionally narrow bandwidths. It may also be necessary to reduce the limits for narrow bandwidths at the extremes of the IBW">Tlim</Data>
					<Data type="FLOAT" optional="1" comment="an horizontal-gain adjustment (dB) - for debugging only!">Gadj</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable LUT normalisation (nominal=off) This may need to be enabled if there are any gain/phase variations in the system that cannot be controlled">norm</Data>
					<Data type="INT" optional="1" comment="the minimum length of time in seconds (nominal=10) that must be spent in each step (Q) during converging">Tconv</Data>
					<Data type="FLOAT" optional="1" comment="the threshold against which EVM is compared (nominal=-6.0) Iterations with evm>Vlim will be discarded and cause the SPURIOUS error code to be generated. These updates may degrade the current DPD performance. This test cannot be disabled.">Vlim</Data>
					<Data type="ENUM(OFF:ON:ENHANCED:X:Z)" optional="1" comment="enable/disable Time Alignment (TA) algorithm (nominal=on)">ta</Data>
					<Data type="ENUM(FULL:ERROR)" optional="1" comment="set DPD training mode to TrainOnFull or TrainOnErrpr (nominal=full)">mode</Data>
					<Data type="ENUM(OFF:ON:DECIMATED:BYPASS)" optional="1" comment="enable/disable Digital PreDistortion (DPD) algorithm (nominal=on)">dpd</Data>
					<Data type="ENUM(OFF:ON:FAST:DCONLY:X:Z)" optional="1" comment="enable/disable Quadrature Modulator Correction (QMC) algorithm (nominal=on)">qmc</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable use of fractional delay filter for time-alignment (bypass filter in SRx)">fdf</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable use of converge state when transitioning between time-alignment (TA) and tracking (TRACK) modes (nominal=on).  This state is intended to provide faster adaption whilst all control loops are stabilising (power control etc)">converge</Data>
					<Data type="INT" optional="1" comment="sets the fixed coarse delay expected (in 245.76MHz samples) between X and Z signals">skew</Data>
					<Data type="ENUM(OFF:ON:BLOCK)" optional="1" comment="enable/disable AFC algorithm(s) that compensate for phase and small frequency offsets between X/Z and Y signals. These are normally caused by limitations of NCO/VCO frequency accuracy. Setting afc=OFF performs a single phase estimate on the first capture which is used to correct all captures for that iteration. Setting afc=ON performs both phase estimation and correction on all captured data sets. Setting afc=BLOCK estimates and corrects the phase error using small blocks of data. The block size can be set by specifying i=blocksize in the same command, i=64 if not specified">afc</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable dynamic DPD algorithm tests (nominal=ON)">dynamic</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable in-built alarm module (nominal=OFF)">alarm</Data>
					<Data type="ENUM(MINOR:MAJOR)" optional="1" comment="indicates or specifies the specific alarm severity to which the other variables in the event or command refer to.  MINOR alarm is used to indicate that the DPD performance may be degraded and MAJOR alarm indicates a more severe degredation in performance or some functional problem - both can be raised due to lack of successful DPD updates for long periods of time. (nominal=MINOR)">severity</Data>
					<Data type="ENUM(OFF:ON:INVALID:CLEAR:PENDING:ACTIVE:ACK)" optional="1" comment="this is used to indicate alarm state changes via events but can also be used to read the current state of an alarm at any time. Alarms can be manually cleared by setting alarmState=CLEAR, enabled or disabled using ON/OFF. Notifications are suppressed once the alarm is acknowledged using alarmState=ACK. Events (alarm notifications) indicating state changes are only generated for state changes between CLEAR and ACTIVE states.">alarmState</Data>
					<Data type="INT" optional="1" comment="the number of consecutive DPD iteration failures that will trigger a PENDING alarm. This can be specified independently for each alarm severity. (nominal=8)">alarmN</Data>
					<Data type="INT" optional="1" comment="the integration time in seconds allowed before a PENDING alarm becomes ACTIVE. This allows a fixed time interval for spurious/temporary alarms to be cleared before a notification event is generated.  This can be specified independently for each alarm severity. (nominal=30s)">alarmT1</Data>
					<Data type="INT" optional="1" comment="the timeout in seconds before alarm is raised due to lack of successful updates. This can be specified independently for each alarm severity. (nominal=60/300s)">alarmT2</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="global enable/disable for decimated captures feature">decimation</Data>
					<Data type="INT" optional="1" comment="the minimum number of successful iteration (nominal=3) that must be aceived in each step (Q) during converging">Iconv</Data>
					<Data type="INT" optional="1" comment="number of iterations, length etc">i</Data>
					<Data type="INT" optional="1" comment="read/write address">addr</Data>
					<Data type="INT" optional="1" comment="read/write data">data</Data>
					<Data type="INT" optional="1" comment="test id number">id</Data>
					<Data type="INT" optional="1" comment="magnitude threshold">level</Data>
					<Data type="ENUM(X:Z:RAW)" optional="1" comment="selection between X and Z signals or raw (unprocessed) data for data capture sources">src</Data>
					<Data type="INT" optional="1" comment="set a debug mode (bitmask,meaning may vary build-to-build)">debug</Data>
					<Data type="INT" optional="1" comment="current version of the API">apiVersion</Data>
				</Args>
			</Function>
			<Function name="get" comment="get the state variable values">
				<Args>
					<Data type="STRING" optional="1">arg0</Data>
					<Data type="STRING" optional="1">arg1</Data>
					<Data type="STRING" optional="1">arg2</Data>
					<Data type="STRING" optional="1">arg3</Data>
					<Data type="STRING" optional="1">arg4</Data>
					<Data type="STRING" optional="1">arg5</Data>
					<Data type="STRING" optional="1">arg6</Data>
					<Data type="STRING" optional="1">arg7</Data>
					<Data type="STRING" optional="1">arg8</Data>
					<Data type="STRING" optional="1">arg9</Data>
					<Data type="STRING" optional="1">arg10</Data>
					<Data type="STRING" optional="1">arg11</Data>
					<Data type="STRING" optional="1">arg12</Data>
					<Data type="STRING" optional="1">arg13</Data>
					<Data type="STRING" optional="1">arg14</Data>
					<Data type="STRING" optional="1">arg15</Data>
					<Data type="STRING" optional="1">arg16</Data>
					<Data type="STRING" optional="1">arg17</Data>
					<Data type="STRING" optional="1">arg18</Data>
					<Data type="STRING" optional="1">arg19</Data>
					<Data type="STRING" optional="1">arg20</Data>
					<Data type="STRING" optional="1">arg21</Data>
					<Data type="STRING" optional="1">arg22</Data>
					<Data type="STRING" optional="1">arg23</Data>
					<Data type="STRING" optional="1">arg24</Data>
					<Data type="STRING" optional="1">arg25</Data>
					<Data type="STRING" optional="1">arg26</Data>
					<Data type="STRING" optional="1">arg27</Data>
					<Data type="STRING" optional="1">arg28</Data>
					<Data type="STRING" optional="1">arg29</Data>
					<Data type="STRING" optional="1">arg30</Data>
					<Data type="STRING" optional="1">arg31</Data>
					<Data type="STRING" optional="1">arg32</Data>
					<Data type="STRING" optional="1">arg33</Data>
					<Data type="STRING" optional="1">arg34</Data>
					<Data type="STRING" optional="1">arg35</Data>
					<Data type="STRING" optional="1">arg36</Data>
					<Data type="STRING" optional="1">arg37</Data>
					<Data type="STRING" optional="1">arg38</Data>
					<Data type="STRING" optional="1">arg39</Data>
					<Data type="STRING" optional="1">arg40</Data>
					<Data type="STRING" optional="1">arg41</Data>
					<Data type="STRING" optional="1">arg42</Data>
					<Data type="STRING" optional="1">arg43</Data>
					<Data type="STRING" optional="1">arg44</Data>
					<Data type="STRING" optional="1">arg45</Data>
					<Data type="STRING" optional="1">arg46</Data>
					<Data type="STRING" optional="1">arg47</Data>
					<Data type="STRING" optional="1">arg48</Data>
					<Data type="STRING" optional="1">arg49</Data>
					<Data type="STRING" optional="1">arg50</Data>
					<Data type="STRING" optional="1">arg51</Data>
					<Data type="STRING" optional="1">arg52</Data>
					<Data type="STRING" optional="1">arg53</Data>
					<Data type="STRING" optional="1">arg54</Data>
					<Data type="STRING" optional="1">arg55</Data>
					<Data type="STRING" optional="1">arg56</Data>
					<Data type="STRING" optional="1">arg57</Data>
					<Data type="STRING" optional="1">arg58</Data>
					<Data type="STRING" optional="1">arg59</Data>
					<Data type="STRING" optional="1">arg60</Data>
					<Data type="STRING" optional="1">arg61</Data>
					<Data type="STRING" optional="1">arg62</Data>
					<Data type="STRING" optional="1">arg63</Data>
					<Data type="STRING" optional="1">arg64</Data>
					<Data type="STRING" optional="1">arg65</Data>
					<Data type="STRING" optional="1">arg66</Data>
					<Data type="STRING" optional="1">arg67</Data>
					<Data type="STRING" optional="1">arg68</Data>
					<Data type="STRING" optional="1">arg69</Data>
					<Data type="STRING" optional="1">arg70</Data>
					<Data type="STRING" optional="1">arg71</Data>
					<Data type="STRING" optional="1">arg72</Data>
					<Data type="STRING" optional="1">arg73</Data>
					<Data type="STRING" optional="1">arg74</Data>
					<Data type="STRING" optional="1">arg75</Data>
					<Data type="STRING" optional="1">arg76</Data>
					<Data type="INT" comment="the Tx path (where multiple Tx paths are supported)" optional="1">tx</Data>
					<Data type="ENUM(MINOR:MAJOR)" comment="indicates or specifies the specific alarm severity to which the other variables in the event or command refer to.  MINOR alarm is used to indicate that the DPD performance may be degraded and MAJOR alarm indicates a more severe degredation in performance or some functional problem - both can be raised due to lack of successful DPD updates for long periods of time. (nominal=MINOR)" optional="1">severity</Data>
				</Args>
			</Function>
			<Function name="reboot" comment="reboot the embedded processor">
			</Function>
			<Function name="frd" comment="read from the specified address">
				<Args>
					<Data type="INT" comment="read/write address" >addr</Data>
				</Args>
			</Function>
			<Function name="fwr" comment="write data to the address">
				<Args>
					<Data type="INT" comment="read/write address" >addr</Data>
					<Data type="INT" comment="read/write data" >data</Data>
				</Args>
			</Function>
			<Function name="printFpga" comment="FPGA register memory dump to MatLab output channel">
				<Args>
					<Data type="INT" comment="read/write address" >addr</Data>
					<Data type="INT" comment="number of iterations, length etc" >i</Data>
				</Args>
			</Function>
			<Function name="printLuts" comment="write the calculated LUTs to the MatLab output channel">
				<Args>
					<Data type="INT" comment="the Tx path (where multiple Tx paths are supported)" optional="1">tx</Data>
				</Args>
			</Function>
			<Function name="printCfr" comment="write the hard clip table to the MatLab output channel">
				<Args>
					<Data type="INT" comment="the Tx path (where multiple Tx paths are supported)" optional="1">tx</Data>
				</Args>
			</Function>
			<Function name="printModel" comment="write the current amplifier model to the MatLab output channel">
				<Args>
					<Data type="INT" comment="the Tx path (where multiple Tx paths are supported)" optional="1">tx</Data>
				</Args>
			</Function>
			<Function name="test" comment="run a supported in-built test case (use id=testcase and i=#iterations)">
				<Args>
					<Data type="INT" comment="the Tx path (where multiple Tx paths are supported)" optional="1">tx</Data>
					<Data type="INT" comment="test id number" optional="1">id</Data>
					<Data type="INT" comment="number of iterations, length etc" optional="1">i</Data>
				</Args>
			</Function>
			<Function name="capture" comment="capture a set of data and write to the MatLab output channel (use src=X|Z level=trigger i=#samples) ">
				<Args>
					<Data type="INT" comment="the Tx path (where multiple Tx paths are supported)" optional="1">tx</Data>
					<Data type="ENUM(X:Z:RAW)" comment="selection between X and Z signals or raw (unprocessed) data for data capture sources" optional="1">src</Data>
					<Data type="ENUM(OFF:ON)" comment="global enable/disable for decimated captures feature" optional="1">decimation</Data>
					<Data type="INT" comment="magnitude threshold" optional="1">level</Data>
					<Data type="INT" comment="number of iterations, length etc" optional="1">i</Data>
				</Args>
			</Function>
			<Function name="start" comment="start running DPD iterations. Specific parameters can be specified e.g. start Q=4 N=1">
				<Args>
					<Data type="ENUM(NACK:ACK)" optional="1" comment="every reply message has an ACK or NACK response">response</Data>
					<Data type="INT" optional="1" comment="Command and reply are associated by the same monotonically increasing message id">msgId</Data>
					<Data type="INT" optional="1" comment="current DPD (software) version number">version</Data>
					<Data type="FLOAT" optional="1" comment="current DPD (FPGA) version number">fpgaVersion</Data>
					<Data type="INT" optional="1" comment="current build number">build</Data>
					<Data type="INT" optional="1" comment="the number of decimal places used for floating point output (e.g. to MatLab channel)">precision</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable output to the trace channel">trace</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable verbose output to the trace channel">verbose</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable ooutput to the MatLab channel">matlab</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable output to the console">console</Data>
					<Data type="INT" optional="1" comment="time in minutes since the DPD process started (readonly)">uptime</Data>
					<Data type="INT" optional="1" comment="time in milliseconds (16-bits, unsigned) (readonly)">t</Data>
					<Data type="INT" optional="1" comment="defines the interval in ms that the DL signals are monitored (nominally 100ms)">dt</Data>
					<Data type="INT" optional="1" comment="the Tx path (where multiple Tx paths are supported)">tx</Data>
					<Data type="INT" optional="1" comment="the number of terms used in the DPD filter (min=1, max=8)">Q</Data>
					<Data type="INT" optional="1" comment="the number of bins used for DPD iterations (nominal=14, max=32)">B</Data>
					<Data type="INT" optional="1" comment="the number of capture data sets to aggregate for each DPD iteration (nominal=3)">N</Data>
					<Data type="FLOAT" optional="1" comment="the gain to use when updating the DPD filter with a newly calculated set of coefficients (nominal=0.25)">G</Data>
					<Data type="FLOAT" optional="1" comment="the gain to use when updating the QMC filter with a newly calculated set of coefficients (nominal=0.25)">Gqmc</Data>
					<Data type="FLOAT" optional="1" comment="the gain to use when updating the SRX attenuator (nominal=0.1)">Gagc</Data>
					<Data type="INT" optional="1" comment="specifies the memory-delay in 245.76MHz samples for the data path to each of the DPD filter's terms (specified as a 32-bit word in hexadecimal with MSB corresponding to primary term or Q=1 nominal=0x01234567)">taps</Data>
					<Data type="INT" optional="1" comment="specifies the memory-delay in 245.76MHz samples for the magnitude path to each of the DPD filter's terms (specified as a 32-bit word in hexadecimal with MSB corresponding to primary term or Q=1 nominal=0x01234567)">mags</Data>
					<Data type="FLOAT" optional="1" comment="fast time-constant filter coefficient for DL monitoring (nominal=0.05)">C1</Data>
					<Data type="FLOAT" optional="1" comment="slow time-constant filter coefficient for DL monitoring (nominal=0.005)">C2</Data>
					<Data type="INT" optional="1" comment="hard clip magnitude threshold (range=[0-32767] nominal=28210)">clip</Data>
					<Data type="INT" optional="1" comment="minimum number of samples for a bin (B) to be considered valid in a DPD iteration">occupancy</Data>
					<Data type="FLOAT" optional="1" comment="the expected PAPR (in dB) of the DL signal at the input of the DPD filter (depends on the configuration of any preceeding CFR, nominal=7.2)">XcfrRef</Data>
					<Data type="INT" optional="1" comment="the expected RMS magnitude of the DL signal at the input to the DPD filter (range=[0..32767] nominal=6925, -13.5dBfs)">XrmsRef</Data>
					<Data type="INT" optional="1" comment="this specifies a minimum DL signal magnitude,  below which the DPD filter characteristic will be extrapolated rather than use noisy data (range=[0..32767] nominal=2190, -23.5dBfs)">XminRef</Data>
					<Data type="INT" optional="1" comment="this specifies the expected, or target, RMS magnitude for the observation receiver (SRx) path (range=[0..32767] nominal=6925, -13.5dBfs). An event is generated with the measured error relative to this level and the SRx RF attenuator is adjusted (if supported) in order to correct it after each DPD iteration">YrmsRef</Data>
					<Data type="FLOAT" optional="1" comment="the current observation receiver (SRx) RF attenuator setting in dB">srxAtten</Data>
					<Data type="FLOAT" optional="1" comment="the maximum gain error allowed between forward path and observation receiver (SRx) in dB (default=6.0)">srxLimit</Data>
					<Data type="FLOAT" optional="1" comment="the measured error (dB) of the forward path gain relative to XrmsRef and YrmsRef [event only]">fwdGerr</Data>
					<Data type="FLOAT" optional="1" comment="the measured error (dB) of the reverse path gain relative to XrmsRef and YrmsRef [event only]">revGerr</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="allows the observation receiver (SRx) AGC to be enabled/disabled">srxAgc</Data>
					<Data type="ENUM(IDLE:WAITMODEL:RESET:WAITBB:TA:CONVERGE:TRACK:NONE)" optional="1" comment="indicates the current state of the DPD control state machine">state</Data>
					<Data type="INT" optional="1" comment="the number of successful DPD iterations since it was last started [event only]">success</Data>
					<Data type="INT" optional="1" comment="the number of consecutive failures of DPD iterations [event only]">fail</Data>
					<Data type="ENUM(OK:UNKNOWN:TIMEALIGNMENT:LOWBB:MUXFAIL:DCUFAIL:LOWSRX:HIGHSRX:YERROR:ZERROR:DIMENSIONING:SOLVER:LUTS:NORMALISATION:RANGE:COVERAGE:UPDATESTRATEGY:EFFICIENCY:EXPANSION:INSANE:SPURIOUS:INHIBIT)" optional="1" comment="specific error relating to the DPD control process or the DPD algorithm itself [event only]">err</Data>
					<Data type="FLOAT" optional="1" comment="the efficiency metric for the current iteration (dB) [event only]">eff</Data>
					<Data type="FLOAT" optional="1" comment="the threshold against which eff is compared (nominal=-10) Iterations with eff>Elim will be discarded and cause the INSANE error code to be generated. Elim must be set to 0 or less. Setting Elim=0 disables this test">Elim</Data>
					<Data type="FLOAT" optional="1" comment="the expansion metric (DPD filter gain at DL peak magnitude) (dB) [event only]">Gexp</Data>
					<Data type="FLOAT" optional="1" comment="the threshold against which Gexp is compared (nominal=3.0) Iterations with Gexp>Glim will be discarded and cause the EXPANSION error code to be generated. This should limit the maximum gain expansion that the DPD filter can provide, protecting the PA from being overdriven and potentially damaged. Setting Glim=0 disables this test.">Glim</Data>
					<Data type="FLOAT" optional="1" comment="the EVM of the calculated coefficients compared with the current, in-use, coefficients (dB) [event only]">evm</Data>
					<Data type="INT" optional="1" comment="indicates whether the TA process has detected correct time-alignment between the Z and Y capture data (event only)">lock</Data>
					<Data type="FLOAT" optional="1" comment="current time-alignment adjustment (skew between Z and Y signals)">Tabs</Data>
					<Data type="FLOAT" optional="1" comment="measured time-alignment error (event only)">Tdelta</Data>
					<Data type="FLOAT" optional="1" comment="modifier for the time-alignment error limits, set to above 1.0 to widen the limits, below 1.0 to narrow the limits. This affects the TA acquisition (default=1.0) and it may be necessary to increase the limits for reliable acquisition with proportionally narrow bandwidths. It may also be necessary to reduce the limits for narrow bandwidths at the extremes of the IBW">Tlim</Data>
					<Data type="FLOAT" optional="1" comment="an horizontal-gain adjustment (dB) - for debugging only!">Gadj</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable LUT normalisation (nominal=off) This may need to be enabled if there are any gain/phase variations in the system that cannot be controlled">norm</Data>
					<Data type="INT" optional="1" comment="the minimum length of time in seconds (nominal=10) that must be spent in each step (Q) during converging">Tconv</Data>
					<Data type="FLOAT" optional="1" comment="the threshold against which EVM is compared (nominal=-6.0) Iterations with evm>Vlim will be discarded and cause the SPURIOUS error code to be generated. These updates may degrade the current DPD performance. This test cannot be disabled.">Vlim</Data>
					<Data type="ENUM(OFF:ON:ENHANCED:X:Z)" optional="1" comment="enable/disable Time Alignment (TA) algorithm (nominal=on)">ta</Data>
					<Data type="ENUM(FULL:ERROR)" optional="1" comment="set DPD training mode to TrainOnFull or TrainOnErrpr (nominal=full)">mode</Data>
					<Data type="ENUM(OFF:ON:DECIMATED:BYPASS)" optional="1" comment="enable/disable Digital PreDistortion (DPD) algorithm (nominal=on)">dpd</Data>
					<Data type="ENUM(OFF:ON:FAST:DCONLY:X:Z)" optional="1" comment="enable/disable Quadrature Modulator Correction (QMC) algorithm (nominal=on)">qmc</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable use of fractional delay filter for time-alignment (bypass filter in SRx)">fdf</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable use of converge state when transitioning between time-alignment (TA) and tracking (TRACK) modes (nominal=on).  This state is intended to provide faster adaption whilst all control loops are stabilising (power control etc)">converge</Data>
					<Data type="INT" optional="1" comment="sets the fixed coarse delay expected (in 245.76MHz samples) between X and Z signals">skew</Data>
					<Data type="ENUM(OFF:ON:BLOCK)" optional="1" comment="enable/disable AFC algorithm(s) that compensate for phase and small frequency offsets between X/Z and Y signals. These are normally caused by limitations of NCO/VCO frequency accuracy. Setting afc=OFF performs a single phase estimate on the first capture which is used to correct all captures for that iteration. Setting afc=ON performs both phase estimation and correction on all captured data sets. Setting afc=BLOCK estimates and corrects the phase error using small blocks of data. The block size can be set by specifying i=blocksize in the same command, i=64 if not specified">afc</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable dynamic DPD algorithm tests (nominal=ON)">dynamic</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="enable/disable in-built alarm module (nominal=OFF)">alarm</Data>
					<Data type="ENUM(MINOR:MAJOR)" optional="1" comment="indicates or specifies the specific alarm severity to which the other variables in the event or command refer to.  MINOR alarm is used to indicate that the DPD performance may be degraded and MAJOR alarm indicates a more severe degredation in performance or some functional problem - both can be raised due to lack of successful DPD updates for long periods of time. (nominal=MINOR)">severity</Data>
					<Data type="ENUM(OFF:ON:INVALID:CLEAR:PENDING:ACTIVE:ACK)" optional="1" comment="this is used to indicate alarm state changes via events but can also be used to read the current state of an alarm at any time. Alarms can be manually cleared by setting alarmState=CLEAR, enabled or disabled using ON/OFF. Notifications are suppressed once the alarm is acknowledged using alarmState=ACK. Events (alarm notifications) indicating state changes are only generated for state changes between CLEAR and ACTIVE states.">alarmState</Data>
					<Data type="INT" optional="1" comment="the number of consecutive DPD iteration failures that will trigger a PENDING alarm. This can be specified independently for each alarm severity. (nominal=8)">alarmN</Data>
					<Data type="INT" optional="1" comment="the integration time in seconds allowed before a PENDING alarm becomes ACTIVE. This allows a fixed time interval for spurious/temporary alarms to be cleared before a notification event is generated.  This can be specified independently for each alarm severity. (nominal=30s)">alarmT1</Data>
					<Data type="INT" optional="1" comment="the timeout in seconds before alarm is raised due to lack of successful updates. This can be specified independently for each alarm severity. (nominal=60/300s)">alarmT2</Data>
					<Data type="ENUM(OFF:ON)" optional="1" comment="global enable/disable for decimated captures feature">decimation</Data>
					<Data type="INT" optional="1" comment="the minimum number of successful iteration (nominal=3) that must be aceived in each step (Q) during converging">Iconv</Data>
					<Data type="INT" optional="1" comment="number of iterations, length etc">i</Data>
					<Data type="INT" optional="1" comment="read/write address">addr</Data>
					<Data type="INT" optional="1" comment="read/write data">data</Data>
					<Data type="INT" optional="1" comment="test id number">id</Data>
					<Data type="INT" optional="1" comment="magnitude threshold">level</Data>
					<Data type="ENUM(X:Z:RAW)" optional="1" comment="selection between X and Z signals or raw (unprocessed) data for data capture sources">src</Data>
					<Data type="INT" optional="1" comment="set a debug mode (bitmask,meaning may vary build-to-build)">debug</Data>
					<Data type="INT" optional="1" comment="current version of the API">apiVersion</Data>
				</Args>
			</Function>
			<Function name="stop" comment="stops the DPD iterations once any that have already been started are completed, they can be resumed from where they left off using the resume command">
				<Args>
					<Data type="INT" comment="the Tx path (where multiple Tx paths are supported)" optional="1">tx</Data>
				</Args>
			</Function>
			<Function name="reset" comment="this resets both the DPD filter to unity and the DPD control state machine">
				<Args>
					<Data type="INT" comment="the Tx path (where multiple Tx paths are supported)" optional="1">tx</Data>
				</Args>
			</Function>
			<Function name="abort" comment="requests an immediate termination of any iteration that is in progress">
				<Args>
					<Data type="INT" comment="the Tx path (where multiple Tx paths are supported)" optional="1">tx</Data>
				</Args>
			</Function>
			<!-- Autogen end -->
			
			
		</Device>
	</Board>
</TestInterface>
