/**
\mainpage Radio Hardware CPRI core interface implementations
<BR>
<CENTER>
\
Copyright (c) Meta Platforms, Inc. and affiliates.
</CENTER>


<hr>
\section hardware_common_cpri_scope Scope
<hr>
This document presents the design details for the common implementation of the ICpri and IFibre interfaces.

It lies within the hardware component, and includes the various interfaces required to initialise, control and
monitor one or more CPRI cores.\n

Before reading this document the reader should be familiar with the architecture of the RRH hardware and
the application software High Level Design.\n
They should also be familiar with the basics of the CPRI link protocol and CPRI terminology.

See Mplane::ICpri and Mplane::IFibre for details of the interface definitions.

<hr>
\section hardware_common_cpri_overview	Overview
<hr>
This design covers the common control functions of the CPRI port(s) on a RRH.

\subsection hardware_common_cpri_overview_ssec1 Requirements Mapping
For customer ALU:\n
The CPRI controlling software module fulfils the CPRI link procedures as defined in the customer-specified version of ARD-0546.\n

<hr>
\section hardware_common_cpri_sec_2 Details of Design
<hr>
The interface to the CPRI link is provided via CPRI core logic embedded in the FPGA on the RRH radio.\n
The interface to this is specified in the FPGA functional specification and takes the form of a number of
dedicated registers through which the software can control and monitor the link.

For daisy-chained heads it is a requirement to keep the FPGA CPRI interface undisturbed
through a processor reset to avoid disrupting downstream RRHs.

\subsection hardware_common_cpri_ssec2_2 Detailed Overview

The Mplane::CommonCpri class provides a common implementation of the ICpri and IFibre interfaces.

It extends the hardware interfaces for ICpri and IFibre to allow for any common radio-specific
processing to be added.
This class can and should be extended and modified where necessary to if the CPRI is
replaced with a different core.

This common class collects together the various interfaces used to initialise a CPRI Fibre interface
and to control and monitor one or more CPRI cores.

It must be implemented as a singleton pattern such that only one ICpri can exist.

As part of its creation it will instantiate the appropriate number of CpriCore
interfaces and store them locally.
Accessor methods are used to retrieve a particular instance of the core.
Each CpriCore instance is defined by a zero based index, and the interface supports up to MAX_PORTS cores.

Access to the CommonCpri class should be instantiated/retrieved by calling the <B>ICpri::getInterface()</B> method,
which when implemented will create a single instance of Mplane::CommonCpri().

\subsection hardware_common_cpri_ssec2_3 Initialisation
When the class Mplane::CommonCpri is instantiated, the constructor performs the following actions:\n
- Initialise the member variables that hold the state of the master and slave CPRI links
- Instantiate a Mplane::CommonCpriCore instance for each CPRI port populated on the hardware

Note:\n
In the  event of a "PROCESSOR reset" the FPGA core is not reset, so as to not affect downstream RRHs.

\subsubsection hardware_common_cpri_ssec2_3_1 FPGA Reset
The FPGA derives it's clock references from the CPRI link.

A controlled FPGA reset is only performed in the event of a FULL reset. For a PROCESSOR reset
the FPGA is left untouched unless the CPRI link subsequently goes down.


\subsection hardware_common_cpri_ssec2_4 CPRI Core Interfaces
The CPRI Core interface is defined in Mplane::ICpriCore and a common implementation in Mplane::CommonCpriCore.
The CPRI core is part of the FPGA implementation and the ICpriCore provides generic interfaces to that FPGA
core implementation.

<hr>
\section hardware_common_cpri_sec_3_1 Dependencies
<hr>

<hr>
\section hardware_common_cpri_sec_4 Host Based Unit Tests
<hr>

This is the test record section.

<hr>
\subsection hardware_common_cpri_ssec_1_1 Code Coverage Summary
<hr>

\include common/cpri/test/coverage.txt

<hr>
\subsection hardware_common_cpri_ssec_1_2 Unit Test Results
<hr>

\include common/cpri/test/cppunit.txt

*/
