/*!
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * \file      SystemFpga.cpp
 * \brief     <one-line description of file>
 *
 *
 * \details   <multi-line detailed description of file>
 *
 */


//=============================================================================================================
// INCLUDE
//=============================================================================================================

#include "SystemFpga.h"

using namespace Mplane;

//=============================================================================================================
// PUBLIC
//=============================================================================================================

//-------------------------------------------------------------------------------------------------------------
Mplane::SystemFpga::SystemFpga(unsigned deviceIndex, const std::string &name) :
	CommonFpgaDev( deviceIndex, name.c_str()),
	Loggable(name.c_str(), "DV")
{
}

//-------------------------------------------------------------------------------------------------------------
Mplane::SystemFpga::~SystemFpga()
{
}

//-------------------------------------------------------------------------------------------------------------
ReturnType::State Mplane::SystemFpga::doInit()
{
	return ReturnType::RT_OK ;
}


//-------------------------------------------------------------------------------------------------------------
void Mplane::SystemFpga::show()
{
}

//=============================================================================================================
// PROTECTED
//=============================================================================================================

//-------------------------------------------------------------------------------------------------------------
ReturnType::State Mplane::SystemFpga::appSpecificInit()
{
	return ReturnType::RT_OK ;
}
