/**
@mainpage Common Radio Hardware Software Module Overview
\anchor _home
<BR>
<CENTER>
@
Copyright (c) Meta Platforms, Inc. and affiliates.
</CENTER>


<hr>
<hr>
@section hardware_common_sec_1	Overview
<hr>
<hr>

The hardware repository contains number of product specific sub-directories, among these
is the <b>common</b> product implementation that contains a number of common radio hardware
implementations of the virtual radio hardware. These implementations are either common to all
radio types or provide a base class that may be extended for a specific radio.

These software modules include common implementations of Mplane::Device for items such as ADCs and DACs.
They also include common implementations of standard Mplane::Module for items such as Filters and FEMs.
There are also implementations of logcial radio parts such as transmit and receive paths and carriers.

<hr>
<hr>
@section hardware_common_sec_2 Design
<hr>
<hr>

This section outlines each of the common hardware modules and provides links to their
detailed designs.


<hr>
@subsection hardware_common_subsec_2_adc Common ADC Device
<hr>

@par
Provides a collection of ADC device implementations for all radio ADCs.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-adc/index.html" target="_blank"><b>Common Radio Hardware Adc</b></A>

<hr>
@subsection hardware_common_subsec_2_agc RX AGC
<hr>

@par
RX front end automatic gain control.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-agc/index.html" target="_blank"><b>RX AGC</b></A>

<hr>
@subsection hardware_common_subsec_2_attenuator Common Attenuator Device
<hr>

@par
Provides a collection of Attenuator device implementations for all radio attenuator types.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-attenuator/index.html" target="_blank"><b>Common Radio Hardware Attenuator</b></A>


<hr>
@subsection hardware_common_subsec_2_brd8led Implementation for the common 8 port LED expansion board
<hr>

@par
This software module provides an interface to the Pheonix 8 port LED expansion board, it implements
the virtual LED interface by deriving from the common LED implementation Mplane::CLedControl and
Mplane::CLed base classes. A link to the detailed design document can be found here:
<A HREF="../hardware-common-brd8led/index.html" target="_blank"><b>Common 8 port LED Hardware Interface</b></A>


<hr>
@subsection hardware_common_subsec_2_caldata Common Calibration Data Base Class Implementation
<hr>

@par
Provides a common base class implementation of Mplane::ICalData virtual interface.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-caldata/index.html" target="_blank"><b>Common Hardware Calibration Data Interface</b></A>



<hr>
@subsection hardware_common_subsec_2_carrier Common Carrier
<hr>

@par
Provides a common base class implementation of Mplane::ICarrier virtual interface.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-carrier/index.html" target="_blank"><b>Common Radio Hardware Carrier</b></A>

<hr>
@subsection hardware_common_subsec_2_cpri Common CPRI Interface Implementation
<hr>

@par
This software module provides a set of common base implementations for CPRI interfaces
in the virtual radio hardware. A link to the detailed design document can be found here:
<A HREF="../hardware-common-cpri/index.html" target="_blank"><b>Common Radio Hardware CPRI</b></A>

<hr>
@subsection hardware_common_subsec_2_dac Common DAC Device
<hr>

@par
Provides a collection of DAC device implementations for all radio DACs.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-dac/index.html" target="_blank"><b>Common Radio Hardware Dac</b></A>


<hr>
@subsection hardware_common_subsec_2_faults Common Fault Handling Base Classes
<hr>

@par
Provides a common fault handling interface base class. A link to the detailed design document can be found here:
<A HREF="../hardware-common-faults/index.html" target="_blank"><b>Common Hardware Fault Implementation</b></A>


<hr>
@subsection hardware_common_subsec_2_fpga Common FPGA Device
<hr>

@par
Provides a common FPGA interface base class. A link to the detailed design document can be found here:
<A HREF="../hardware-common-fpga/index.html" target="_blank"><b>Common Radio Hardware FPGA</b></A>


<hr>
@subsection hardware_common_subsec_2_frequencyconstants Common Frequency Constants Implementation
<hr>

@par
Provides a common implementation of the Mplane::IRxFrequencyConst and Mplane::ITxFrequencyConst
virtual radio hardware interface. These base classes can be extended by radio specific
implementations and created through a factory interface. A link to the detailed design document can be found here:
<A HREF="../hardware-common-frequencyconstants/index.html" target="_blank"><b>Common Radio Hardware Frequency Constants</b></A>

<hr>
@subsection hardware_common_subsec_2_fpga Common Heartbeat Monitor
<hr>

@par
Provides a heartbeat monitor which raises an alarm if an external controller doesn't keep the heartbeat
"ticking". A link to the detailed design document can be found here:
<A HREF="../hardware-common-heartbeat/index.html" target="_blank"><b>Common Heartbeat Monitor</b></A>


<hr>
@subsection hardware_common_subsec_2_gpio Common Base GPIO implementation
<hr>

@par
This software module provides a common base implementation for GPIO hardware
A link to the detailed design document can be found here:
<A HREF="../hardware-common-gpio/index.html" target="_blank"><b>Common GPIO Hardware Implementation</b></A>



<hr>
@subsection hardware_common_subsec_2_initdata Common Device Initialisation Data
<hr>

@par
This software module provides a set of initialisation data for the common radio device
implementations. A link to the detailed design document can be found here:
<A HREF="../hardware-common-initdata/index.html" target="_blank"><b>Common Radio Hardware Device Initialisation Data</b></A>

<hr>
@subsection hardware_common_subsec_2_led Common LED Base Class Implementation
<hr>

@par
This software module provides a set of common base implementations for the Mplane::ILedControl and
Mplane::ILed virtual hardware interface. It is intended to provided the base functionality for
all hardware specific implementations. A link to the detailed design document can be found here:
<A HREF="../hardware-common-led/index.html" target="_blank"><b>Common Hardware LED Base Class</b></A>


<hr>
@subsection hardware_common_subsec_2_miscdev Common Miscellaneous Device Implementation
<hr>

@par
This a software module place holder to specialised devices such as Control and Measurement
devices. A link to the detailed design document can be found here:
<A HREF="../hardware-common-miscdev/index.html" target="_blank"><b>Common Radio Hardware Miscellaneous Devices</b></A>

<hr>
@subsection hardware_common_subsec_2_peripheral Peripheral Bus
<hr>

@par
The peripheral bus provides an abstraction layer through which peripherals (such as adcs, dacs, synths, spi etc)
can access the underlying hardware without embedding knowledge of that hardware in the peripheral code itself
A link to the detailed design document can be found here:
<A HREF="../hardware-common-peripherals/index.html" target="_blank"><b>Common Radio Hardware Peripherals</b></A>

<hr>
@subsection hardware_common_subsec_2_radio Common Radio Implementations
<hr>

@par
This software module provides a set of common base implementations for a number of interfaces
in the virtual radio hardware. For details of those provided see the following link:
<A HREF="../hardware-common-radio/index.html" target="_blank"><b>Common Radio Hardware Implementations</b></A>

<hr>
@subsection hardware_common_subsec_2_spi Common SPI Bus Implementation
<hr>

@par
This a software module place holder for common SPI interface implementation.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-spi/index.html" target="_blank"><b>Common SPI Interface Implementations</b></A>

<hr>
@subsection hardware_common_subsec_2_synth Common Synthesiser Device
<hr>

@par
Provides a collection of synthesiser and clock device implementations for all radio
synthesisers. A link to the detailed design document can be found here:
<A HREF="../hardware-common-synth/index.html" target="_blank"><b>Common Radio Hardware Synthesisers</b></A>

<hr>
@subsection hardware_common_subsec_2_fpgacomms FPGA Communications
<hr>

@par
Commincations between application and an embedded processor in the FPGA.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-FpgaComms/index.html" target="_blank"><b>Common Radio Hardware FPGA Communications</b></A>


<hr>
@subsection hardware_common_subsec_2_idelays Delays Manager
<hr>

@par
The CPRI delays manager.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-DelaysMgr/index.html" target="_blank"><b>Common Radio Hardware Delays Manager</b></A>



<hr>
<hr>
@section hardware_common_sec_3 Simulation and Testing
<hr>
<hr>

This section describes the classes written to emulate real hardware behaviour such that running the full application on a host
PC will give equivalent results to those when running the application on a board. This makes it much simpler to replicate
real world problems in a more controlled (debuggable) environment.

It is highly recommended that you spend time familiarising yourself with the available emulation capabilities and use them, rather
than resorting to the much harder task of debugging on a board.


<hr>
@subsection hardware_common_subsec_3_cpriEmu CPRI Emulator
<hr>

@par
This software module provides emulation of the CPRI fpga register behaviour.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-CpriFibreEmu/index.html" target="_blank"><b>CPRI Emulator</b></A>


<hr>
@subsection hardware_common_subsec_3_fpgaEmu FPGA Emulator
<hr>

@par
This software module provides emulation of the fpga register behaviour.
A link to the detailed design document can be found here:
<A HREF="../hardware-common-fpga/index.html#hardware_common_fpga_sec_5" target="_blank"><b>FPGA Emulator</b></A>




*/
