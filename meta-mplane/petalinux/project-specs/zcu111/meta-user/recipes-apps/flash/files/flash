#!/bin/sh
#
# Mount the flash filesystem (uses eMMC bulk storage)
#

# Use uboot env var 
MMC_DEV=$(i2cenv MMC_DEV | sed 's/^MMC_DEV=//')
if [ ! -n "$MMC_DEV" ]; then
	# set default
	MMC_DEV=mmcblk0p1
fi
MMC_MOUNT=/run/media/$MMC_DEV
MMC_DEVICE=/dev/$MMC_DEV

FLASH_DIR=/nandflash


function is_sdcard_mounted {
	mount | grep -q $MMC_DEVICE
	if [ $? -eq 0 ]; then
	        MMC_MOUNT=$(mount | grep /dev/mmc | awk '{print $3;}')
	fi
	mount | grep -q $MMC_DEVICE
	# $? = 0 if mounted
}

function mount_sdcard {
	mkdir -p $MMC_MOUNT
	mount -t ext4 $MMC_DEVICE $MMC_MOUNT
}

function unmount_sdcard {
   	umount $MMC_MOUNT
   	umount $FLASH_DIR
}



case "$1" in
  start)
  	# check mounted
  	is_sdcard_mounted
	if [ $? = 1 ] ; then
		mount_sdcard
	fi
  	
  	# check mounted again - if still not then stop
  	is_sdcard_mounted
	if [ $? = 1 ] ; then
		echo Error: Unable to access sdcard
		exit 1
	fi
  	
    # check that SD-Card is formatted as ext4
    if [ ! -e $MMC_MOUNT/.ext4 ]; then
    
    	# try formatting
    	unmount_sdcard
    	echo y | mkfs.ext4 $MMC_DEVICE
		if [ $? = 0 ] ; then
			echo Formatted sdcard as ext4
			mount_sdcard
		else
			echo Unable to format sdcard
			exit 1
		fi
		touch $MMC_MOUNT/.ext4
    fi
  
    # Create the mount point - if all else fails then this will be an empty dir
    mkdir -p $FLASH_DIR
    
	# Try mounting partition regardless - exit status will tell if it worked
	printf "Mounting flash file system: "
	mkdir -p $MMC_MOUNT$FLASH_DIR
	mount --bind $MMC_MOUNT$FLASH_DIR $FLASH_DIR
	if [ $? = 0 ] ; then
		printf "OK\n"
	else
		printf "FAIL\n"
	fi
	;;
	
  stop)
	printf "Un-mounting flash file system: "
	sync
	unmount_sdcard
	[ $? = 0 ] && echo "OK" || echo "FAIL"
	;;
	
  restart|reload)
	"$0" stop
	"$0" start
	;;
	
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?
